import { Icon } from '@roninoss/icons';
import { Link } from 'expo-router';
import * as React from 'react';
import { FlatList, Pressable, View } from 'react-native';

import { Text } from '@/components/Text';
import { Toggle } from '@/components/Toggle';
import { cn } from '@/lib/cn';
import { useColorScheme } from '@/lib/useColorScheme';
import { useHeaderSearchBar } from '@/lib/useHeaderSearchBar';

export default function Screen() {
  const { colors } = useColorScheme();
  const searchValue = useHeaderSearchBar();

  const data = searchValue
    ? COMPONENTS.filter((c) => c.name.toLowerCase().includes(searchValue.toLowerCase()))
    : COMPONENTS;

  const screens = searchValue
    ? FULL_SCREEN_COMPONENTS.filter((c) => c.name.toLowerCase().includes(searchValue.toLowerCase()))
    : FULL_SCREEN_COMPONENTS;

  return (
    <FlatList
      contentInsetAdjustmentBehavior="automatic"
      data={data}
      contentContainerClassName="py-4"
      extraData={searchValue}
      removeClippedSubviews={false} // used for selecting text on android
      keyExtractor={(item) => item.name}
      ItemSeparatorComponent={() => <View className="p-2" />}
      renderItem={({ item }) => {
        return (
          <Card title={item.name}>
            <item.component />
          </Card>
        );
      }}
      ListFooterComponent={() => {
        return (
          <FlatList
            ListHeaderComponent={() => (
              <View className={cn('px-4 pb-2 pt-6', screens.length === 0 && 'hidden')}>
                <Text className="text-xs font-semibold opacity-50 ">NAVIGATORS</Text>
              </View>
            )}
            scrollToOverflowEnabled
            scrollEnabled={false}
            contentInsetAdjustmentBehavior="automatic"
            data={screens}
            className="ios:px-4"
            extraData={searchValue}
            keyExtractor={(item) => item.name}
            renderItem={({ index, item }) => {
              const isLast = index === screens.length - 1;
              return (
                <Link href={item.href} asChild>
                  <Pressable
                    className={cn(
                      index === 0 && 'ios:rounded-t-xl border-t',
                      isLast && 'ios:rounded-b-xl border-b',
                      'bg-card ios:border-l ios:border-r border-border flex-row active:opacity-80'
                    )}>
                    <View
                      className={cn(
                        !isLast && 'border-border border-b',
                        'flex-1 flex-row items-center justify-between px-4 py-3'
                      )}>
                      <Text>{item.name}</Text>
                      <Icon name="chevron-right" size={18} color={colors.grey} />
                    </View>
                  </Pressable>
                </Link>
              );
            }}
          />
        );
      }}
    />
  );
}

function Card({ children, title }: { children: React.ReactNode; title: string }) {
  return (
    <View className="px-4">
      <View className="bg-card border-border gap-4 rounded-xl border p-4 pb-6 shadow-sm shadow-black/10 dark:shadow-none">
        <Text className="text-center text-sm font-medium tracking-wider opacity-60">{title}</Text>
        {children}
      </View>
    </View>
  );
}

function ToggleExample() {
  const [switchValue, setSwitchValue] = React.useState(true);
  return (
    <View className="items-center">
      <Toggle value={switchValue} onValueChange={setSwitchValue} />
    </View>
  );
}

const COMPONENTS = [
  {
    name: 'Toggle',
    component: ToggleExample,
  },

  {
    name: 'Text',
    component: () => (
      <View className="gap-2">
        <Text variant="largeTitle" className="text-center">
          Large Title
        </Text>
        <Text variant="title1" className="text-center">
          Title 1
        </Text>
        <Text variant="title2" className="text-center">
          Title 2
        </Text>
        <Text variant="title3" className="text-center">
          Title 3
        </Text>
        <Text variant="heading" className="text-center">
          Heading
        </Text>
        <Text variant="body" className="text-center">
          Body
        </Text>
        <Text variant="callout" className="text-center">
          Callout
        </Text>
        <Text variant="subhead" className="text-center">
          Subhead
        </Text>
        <Text variant="footnote" className="text-center">
          Footnote
        </Text>
        <Text variant="caption1" className="text-center">
          Caption 1
        </Text>
        <Text variant="caption2" className="text-center">
          Caption 2
        </Text>
      </View>
    ),
  },
] as const;

const FULL_SCREEN_COMPONENTS = [
  {
    name: 'Drawer Navigation',
    href: '/drawer/',
  },
  {
    name: 'Bottom Tabs Navigation',
    href: '/bottom-tabs/',
  },
  {
    name: 'Top Tabs Navigation',
    href: '/top-tabs/',
  },
] as const;
