import { Toolbox } from 'gluegun/build/types/domain/toolbox'

import { getPackageManager } from './getPackageManager'
import { CliResults } from '../types'

export async function printOutput(
  cliResults: CliResults,
  formattedFiles: any[],
  toolbox: Toolbox,
): Promise<void> {
  const {
    parameters: { options },
    print: { info, success },
    system,
  } = toolbox

  const { projectName, flags } = cliResults

  // Output the results to the user
  info(``)
  info(`Initializing your project...`)

  await Promise.all(formattedFiles)

  // check if npm option is set, otherwise set based on what the system is configure to use
  const packageManager = getPackageManager(toolbox)

  if (!options.noInstall && !flags.noInstall) {
    info(``)
    info(`Installing dependencies using ${packageManager}...`)
    info(``)

    // install with yarn or npm i
    await system.spawn(
      `cd ${projectName} && ${packageManager} install --silent`,
      {
        shell: true,
        stdio: 'inherit',
      },
    )
  }

  info(``)
  info(`Cleaning up your project...`)

  // format the files
  await system.spawn(`cd ${projectName} && ${packageManager} run format`, {
    shell: true,
    stdio: 'inherit',
  })

  if (!options.noGit && !flags.noGit) {
    info(``)
    info(`Initializing git...`)
    info(``)

    // initialize git repo and add first commit
    await system.spawn(
      `cd ${projectName} && git init --quiet && git add . && git commit -m "Initial commit" -m "Generated by create-expo-stack 2.0.0." --quiet`,
      {
        shell: true,
        stdio: 'inherit',
      },
    )
  }

  success('Success! ðŸŽ‰ Now, just run the following to get started: ')
  info(``)
  info(`cd ${projectName}`)
  if (packageManager === 'npm') {
    if (options.noInstall) info('npm install')
    info('npm run ios')
  } else if (packageManager === 'pnpm') {
    if (options.noInstall) info('pnpm install')
    info('pnpm run ios')
  } else if (packageManager === 'bun') {
    if (options.noInstall) info('bun install')
    info('bun run ios')
  } else {
    if (options.noInstall) info('yarn install')
    info('yarn ios')
  }
  info(``)
}
